"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./nft/main.js":
/*!*********************!*\
  !*** ./nft/main.js ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alchemy-sdk */ \"./nft/node_modules/alchemy-sdk/dist/esm/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// Setup: npm install alchemy-sdk\n\nconst config = {\n    apiKey: \"gpp3BgjyZPndnfRM4Hnvt5ESKBAc3mAb\",\n    network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_MAINNET\n};\nconst alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(config);\nconst main = async ()=>{\n    // Contract address\n    const address = \"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\";\n    // Flag to omit metadata\n    const omitMetadata = false;\n    // Get all NFTs\n    //   const { nfts } = await alchemy.nft.getNftsForContract(address, {\n    //     omitMetadata: omitMetadata,\n    //   });\n    const { response  } = await alchemy.nft.getNftsForContract(address, {\n        omitMetadata: omitMetadata\n    });\n    console.log(\"data was fetched\");\n    let i = 1;\n    const nftStore = [];\n    for (let nft of response){\n        nftStore[i] = \"\".concat(i, \". \").concat(nft.rawMetadata.image);\n        i++;\n    }\n    return nftStore;\n};\nconst runMain = async ()=>{\n    try {\n        await main();\n        process.exit(0);\n    } catch (error) {\n        console.log(error);\n        process.exit(1);\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (main);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9uZnQvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBaUM7QUFDYztBQUUvQyxNQUFNRSxTQUFTO0lBQ2JDLFFBQVE7SUFDUkMsU0FBU0gsNERBQW1CO0FBQzlCO0FBQ0EsTUFBTUssVUFBVSxJQUFJTixnREFBT0EsQ0FBQ0U7QUFFNUIsTUFBTUssT0FBTyxVQUFZO0lBQ3ZCLG1CQUFtQjtJQUNuQixNQUFNQyxVQUFVO0lBRWhCLHdCQUF3QjtJQUN4QixNQUFNQyxlQUFlLEtBQUs7SUFFMUIsZUFBZTtJQUNmLHFFQUFxRTtJQUNyRSxrQ0FBa0M7SUFDbEMsUUFBUTtJQUNSLE1BQU0sRUFBRUMsU0FBUSxFQUFFLEdBQUcsTUFBTUosUUFBUUssR0FBRyxDQUFDQyxrQkFBa0IsQ0FBQ0osU0FBUztRQUNqRUMsY0FBY0E7SUFDaEI7SUFDQUksUUFBUUMsR0FBRyxDQUFDO0lBRVosSUFBSUMsSUFBSTtJQUNSLE1BQU1DLFdBQVcsRUFBRTtJQUVuQixLQUFLLElBQUlMLE9BQU9ELFNBQVU7UUFDeEJNLFFBQVEsQ0FBQ0QsRUFBRSxHQUFHLEdBQVNKLE9BQU5JLEdBQUUsTUFBMEIsT0FBdEJKLElBQUlNLFdBQVcsQ0FBQ0MsS0FBSztRQUM1Q0g7SUFDRjtJQUNBLE9BQU9DO0FBQ1Q7QUFFQSxNQUFNRyxVQUFVLFVBQVk7SUFDMUIsSUFBSTtRQUNGLE1BQU1aO1FBQ05hLE9BQU9BLENBQUNDLElBQUksQ0FBQztJQUNmLEVBQUUsT0FBT0MsT0FBTztRQUNkVCxRQUFRQyxHQUFHLENBQUNRO1FBQ1pGLE9BQU9BLENBQUNDLElBQUksQ0FBQztJQUNmO0FBQ0Y7QUFFQSwrREFBZWQsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9uZnQvbWFpbi5qcz9hNjAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNldHVwOiBucG0gaW5zdGFsbCBhbGNoZW15LXNka1xuaW1wb3J0IHsgQWxjaGVteSwgTmV0d29yayB9IGZyb20gXCJhbGNoZW15LXNka1wiO1xuXG5jb25zdCBjb25maWcgPSB7XG4gIGFwaUtleTogXCJncHAzQmdqeVpQbmRuZlJNNEhudnQ1RVNLQkFjM21BYlwiLFxuICBuZXR3b3JrOiBOZXR3b3JrLkVUSF9NQUlOTkVULFxufTtcbmNvbnN0IGFsY2hlbXkgPSBuZXcgQWxjaGVteShjb25maWcpO1xuXG5jb25zdCBtYWluID0gYXN5bmMgKCkgPT4ge1xuICAvLyBDb250cmFjdCBhZGRyZXNzXG4gIGNvbnN0IGFkZHJlc3MgPSBcIjB4QkM0Q0EwRWRBNzY0N0E4YUI3QzIwNjFjMkUxMThBMThhOTM2ZjEzRFwiO1xuXG4gIC8vIEZsYWcgdG8gb21pdCBtZXRhZGF0YVxuICBjb25zdCBvbWl0TWV0YWRhdGEgPSBmYWxzZTtcblxuICAvLyBHZXQgYWxsIE5GVHNcbiAgLy8gICBjb25zdCB7IG5mdHMgfSA9IGF3YWl0IGFsY2hlbXkubmZ0LmdldE5mdHNGb3JDb250cmFjdChhZGRyZXNzLCB7XG4gIC8vICAgICBvbWl0TWV0YWRhdGE6IG9taXRNZXRhZGF0YSxcbiAgLy8gICB9KTtcbiAgY29uc3QgeyByZXNwb25zZSB9ID0gYXdhaXQgYWxjaGVteS5uZnQuZ2V0TmZ0c0ZvckNvbnRyYWN0KGFkZHJlc3MsIHtcbiAgICBvbWl0TWV0YWRhdGE6IG9taXRNZXRhZGF0YSxcbiAgfSk7XG4gIGNvbnNvbGUubG9nKFwiZGF0YSB3YXMgZmV0Y2hlZFwiKTtcblxuICBsZXQgaSA9IDE7XG4gIGNvbnN0IG5mdFN0b3JlID0gW107XG5cbiAgZm9yIChsZXQgbmZ0IG9mIHJlc3BvbnNlKSB7XG4gICAgbmZ0U3RvcmVbaV0gPSBgJHtpfS4gJHtuZnQucmF3TWV0YWRhdGEuaW1hZ2V9YDtcbiAgICBpKys7XG4gIH1cbiAgcmV0dXJuIG5mdFN0b3JlO1xufTtcblxuY29uc3QgcnVuTWFpbiA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBtYWluKCk7XG4gICAgcHJvY2Vzcy5leGl0KDApO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICBwcm9jZXNzLmV4aXQoMSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1haW47XG4iXSwibmFtZXMiOlsiQWxjaGVteSIsIk5ldHdvcmsiLCJjb25maWciLCJhcGlLZXkiLCJuZXR3b3JrIiwiRVRIX01BSU5ORVQiLCJhbGNoZW15IiwibWFpbiIsImFkZHJlc3MiLCJvbWl0TWV0YWRhdGEiLCJyZXNwb25zZSIsIm5mdCIsImdldE5mdHNGb3JDb250cmFjdCIsImNvbnNvbGUiLCJsb2ciLCJpIiwibmZ0U3RvcmUiLCJyYXdNZXRhZGF0YSIsImltYWdlIiwicnVuTWFpbiIsInByb2Nlc3MiLCJleGl0IiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./nft/main.js\n"));

/***/ })

});