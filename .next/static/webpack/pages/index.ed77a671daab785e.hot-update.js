"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./nft/main.js":
/*!*********************!*\
  !*** ./nft/main.js ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alchemy-sdk */ \"./nft/node_modules/alchemy-sdk/dist/esm/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n// Setup: npm install alchemy-sdk\n\nconst config = {\n    apiKey: \"gpp3BgjyZPndnfRM4Hnvt5ESKBAc3mAb\",\n    network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_MAINNET\n};\nconst alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(config);\nconst main = async ()=>{\n    // Contract address\n    //   const address = \"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\";\n    //   // Flag to omit metadata\n    //   const omitMetadata = false;\n    //   // Get all NFTs\n    //   const { nfts } = await alchemy.nft.getNftsForContract(address, {\n    //     omitMetadata: omitMetadata,\n    //   });\n    //   let i = 0;\n    //   let nftStore = [];\n    //   for (let nft of nfts) {\n    //     nftStore[i] = `${i}. ${nft.rawMetadata.image}`;\n    //     // console.log(`${i}. ${nft.rawMetadata.image}`);\n    //     i++;\n    //   }\n    //   return nftStore;\n    // TIMEPieces contract address\n    const address = \"0xDd69da9a83ceDc730bc4d3C56E96D29Acc05eCDE\";\n    // Safe Haven Token ID\n    const tokenId = 4254;\n    // Get owner of NFT\n    const owner = await alchemy.nft.getOwnersForNft(address, tokenId).then((x)=>{\n        return x;\n    });\n};\nconst runMain = async ()=>{\n    try {\n        await main();\n        process.exit(0);\n    } catch (error) {\n        console.log(error);\n        process.exit(1);\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (main);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9uZnQvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBaUM7QUFDYztBQUUvQyxNQUFNRSxTQUFTO0lBQ2JDLFFBQVE7SUFDUkMsU0FBU0gsNERBQW1CO0FBQzlCO0FBQ0EsTUFBTUssVUFBVSxJQUFJTixnREFBT0EsQ0FBQ0U7QUFFNUIsTUFBTUssT0FBTyxVQUFZO0lBQ3ZCLG1CQUFtQjtJQUNuQixrRUFBa0U7SUFFbEUsNkJBQTZCO0lBQzdCLGdDQUFnQztJQUVoQyxvQkFBb0I7SUFDcEIscUVBQXFFO0lBQ3JFLGtDQUFrQztJQUNsQyxRQUFRO0lBRVIsZUFBZTtJQUNmLHVCQUF1QjtJQUV2Qiw0QkFBNEI7SUFDNUIsc0RBQXNEO0lBQ3RELHdEQUF3RDtJQUN4RCxXQUFXO0lBQ1gsTUFBTTtJQUNOLHFCQUFxQjtJQUVyQiw4QkFBOEI7SUFDOUIsTUFBTUMsVUFBVTtJQUVoQixzQkFBc0I7SUFDdEIsTUFBTUMsVUFBVTtJQUVoQixtQkFBbUI7SUFDbkIsTUFBTUMsUUFBUSxNQUFNSixRQUFRSyxHQUFHLENBQzVCQyxlQUFlLENBQUNKLFNBQVNDLFNBQ3pCSSxJQUFJLENBQUMsQ0FBQ0MsSUFBTTtRQUNYLE9BQU9BO0lBQ1Q7QUFDSjtBQUVBLE1BQU1DLFVBQVUsVUFBWTtJQUMxQixJQUFJO1FBQ0YsTUFBTVI7UUFDTlMsT0FBT0EsQ0FBQ0MsSUFBSSxDQUFDO0lBQ2YsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFDWkYsT0FBT0EsQ0FBQ0MsSUFBSSxDQUFDO0lBQ2Y7QUFDRjtBQUVBLCtEQUFlVixJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25mdC9tYWluLmpzP2E2MDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2V0dXA6IG5wbSBpbnN0YWxsIGFsY2hlbXktc2RrXG5pbXBvcnQgeyBBbGNoZW15LCBOZXR3b3JrIH0gZnJvbSBcImFsY2hlbXktc2RrXCI7XG5cbmNvbnN0IGNvbmZpZyA9IHtcbiAgYXBpS2V5OiBcImdwcDNCZ2p5WlBuZG5mUk00SG52dDVFU0tCQWMzbUFiXCIsXG4gIG5ldHdvcms6IE5ldHdvcmsuRVRIX01BSU5ORVQsXG59O1xuY29uc3QgYWxjaGVteSA9IG5ldyBBbGNoZW15KGNvbmZpZyk7XG5cbmNvbnN0IG1haW4gPSBhc3luYyAoKSA9PiB7XG4gIC8vIENvbnRyYWN0IGFkZHJlc3NcbiAgLy8gICBjb25zdCBhZGRyZXNzID0gXCIweEJDNENBMEVkQTc2NDdBOGFCN0MyMDYxYzJFMTE4QTE4YTkzNmYxM0RcIjtcblxuICAvLyAgIC8vIEZsYWcgdG8gb21pdCBtZXRhZGF0YVxuICAvLyAgIGNvbnN0IG9taXRNZXRhZGF0YSA9IGZhbHNlO1xuXG4gIC8vICAgLy8gR2V0IGFsbCBORlRzXG4gIC8vICAgY29uc3QgeyBuZnRzIH0gPSBhd2FpdCBhbGNoZW15Lm5mdC5nZXROZnRzRm9yQ29udHJhY3QoYWRkcmVzcywge1xuICAvLyAgICAgb21pdE1ldGFkYXRhOiBvbWl0TWV0YWRhdGEsXG4gIC8vICAgfSk7XG5cbiAgLy8gICBsZXQgaSA9IDA7XG4gIC8vICAgbGV0IG5mdFN0b3JlID0gW107XG5cbiAgLy8gICBmb3IgKGxldCBuZnQgb2YgbmZ0cykge1xuICAvLyAgICAgbmZ0U3RvcmVbaV0gPSBgJHtpfS4gJHtuZnQucmF3TWV0YWRhdGEuaW1hZ2V9YDtcbiAgLy8gICAgIC8vIGNvbnNvbGUubG9nKGAke2l9LiAke25mdC5yYXdNZXRhZGF0YS5pbWFnZX1gKTtcbiAgLy8gICAgIGkrKztcbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIG5mdFN0b3JlO1xuXG4gIC8vIFRJTUVQaWVjZXMgY29udHJhY3QgYWRkcmVzc1xuICBjb25zdCBhZGRyZXNzID0gXCIweERkNjlkYTlhODNjZURjNzMwYmM0ZDNDNTZFOTZEMjlBY2MwNWVDREVcIjtcblxuICAvLyBTYWZlIEhhdmVuIFRva2VuIElEXG4gIGNvbnN0IHRva2VuSWQgPSA0MjU0O1xuXG4gIC8vIEdldCBvd25lciBvZiBORlRcbiAgY29uc3Qgb3duZXIgPSBhd2FpdCBhbGNoZW15Lm5mdFxuICAgIC5nZXRPd25lcnNGb3JOZnQoYWRkcmVzcywgdG9rZW5JZClcbiAgICAudGhlbigoeCkgPT4ge1xuICAgICAgcmV0dXJuIHg7XG4gICAgfSk7XG59O1xuXG5jb25zdCBydW5NYWluID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGF3YWl0IG1haW4oKTtcbiAgICBwcm9jZXNzLmV4aXQoMCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgbWFpbjtcbiJdLCJuYW1lcyI6WyJBbGNoZW15IiwiTmV0d29yayIsImNvbmZpZyIsImFwaUtleSIsIm5ldHdvcmsiLCJFVEhfTUFJTk5FVCIsImFsY2hlbXkiLCJtYWluIiwiYWRkcmVzcyIsInRva2VuSWQiLCJvd25lciIsIm5mdCIsImdldE93bmVyc0Zvck5mdCIsInRoZW4iLCJ4IiwicnVuTWFpbiIsInByb2Nlc3MiLCJleGl0IiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./nft/main.js\n"));

/***/ })

});